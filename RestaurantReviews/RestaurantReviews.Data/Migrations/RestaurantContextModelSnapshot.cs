// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReviews.Data;

namespace RestaurantReviews.Data.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RestaurantReviews.Data.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("RestaurantReviews.Data.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RestaurantReviews.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("First")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43757037-6429-4aa0-8c96-62867c419967"),
                            DateCreated = new DateTime(2020, 12, 11, 6, 2, 59, 680, DateTimeKind.Utc).AddTicks(8602),
                            DateModified = new DateTime(2020, 12, 11, 6, 2, 59, 680, DateTimeKind.Utc).AddTicks(8637),
                            First = "Homer",
                            Last = "Simpson"
                        },
                        new
                        {
                            Id = new Guid("ac6b3f45-2cdf-4a2d-8df1-764f25ca8614"),
                            DateCreated = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(811),
                            DateModified = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(819),
                            First = "Marge",
                            Last = "Simpson"
                        },
                        new
                        {
                            Id = new Guid("41355f76-973d-47cd-9c48-90ae826d9a0c"),
                            DateCreated = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(879),
                            DateModified = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(881),
                            First = "Bart",
                            Last = "Simpson"
                        },
                        new
                        {
                            Id = new Guid("779ab260-7af2-421a-b0cf-4df17164a406"),
                            DateCreated = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(888),
                            DateModified = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(889),
                            First = "Lisa",
                            Last = "Simpson"
                        },
                        new
                        {
                            Id = new Guid("292801c5-a3ca-4f35-9224-159ec9667e11"),
                            DateCreated = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(896),
                            DateModified = new DateTime(2020, 12, 11, 6, 2, 59, 681, DateTimeKind.Utc).AddTicks(897),
                            First = "Maggie",
                            Last = "Simpson"
                        });
                });

            modelBuilder.Entity("RestaurantReviews.Data.Review", b =>
                {
                    b.HasOne("RestaurantReviews.Data.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");

                    b.HasOne("RestaurantReviews.Data.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantReviews.Data.Restaurant", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantReviews.Data.User", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
